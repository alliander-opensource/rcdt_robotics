#!/bin/bash

# SPDX-FileCopyrightText: Alliander N. V.
# 
# SPDX-License-Identifier: Apache-2.0

SCRIPT_PATH=$(
    cd "$(dirname "${BASH_SOURCE[0]}")" || exit
    pwd -P
)

images=()
for dockerfile in $SCRIPT_PATH/dockerfiles/*.Dockerfile; do
    images+=("$(basename "${dockerfile%.*}")")
done
[[ -z $images ]] && echo "No Dockerfiles found" && return 1
echo "Select image #: "
select image in "${images[@]}" ; do
    [[ $image ]] && break
done

cache_options=(true false)
echo "Build with cache?"
select use_cache in "${cache_options[@]}" ; do
    [[ $use_cache ]] && break
done
use_cache=$(! "$use_cache" && echo "--no-cache" || echo "")

sequential_options=(parallel sequential)
echo "Colcon build style: "
select colcon_build_sequential in "${sequential_options[@]}" ; do
    [[ $colcon_build_sequential ]] && break
done
COLCON_BUILD_SEQUENTIAL=$([ "$colcon_build_sequential" == "sequential" ] && echo "true" || echo "false")

docker build \
    $use_cache \
    --build-arg COLCON_BUILD_SEQUENTIAL="$COLCON_BUILD_SEQUENTIAL" \
    -t "rcdt/$image:local" \
    -f "$SCRIPT_PATH/dockerfiles/$image.Dockerfile" \
    "$SCRIPT_PATH/dockerfiles"

echo Running $image:local ...
docker compose -f $SCRIPT_PATH/.devcontainer/docker-compose.yml run --rm $image
