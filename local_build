#!/bin/bash

# SPDX-FileCopyrightText: Alliander N. V.
# 
# SPDX-License-Identifier: Apache-2.0

SCRIPT_DIR_PATH=$(
    cd "$(dirname "${BASH_SOURCE[0]}")" || exit
    pwd -P
)

images=()
for dockerfile in $SCRIPT_DIR_PATH/dockerfiles/*.Dockerfile; do
    images+=("$(basename "${dockerfile%.*}")")
done
[[ -z $images ]] && echo "No Dockerfiles found" && return 1
PS3="Which image do you want to build? (select with number): "
select image in "${images[@]}" ; do
    selected_image=$image
    [[ $selected_image ]] && break
done

cache_options=(yes no)
PS3="Do you want to build with cache? (select with number): "
select cache_option in "${cache_options[@]}" ; do
    use_cache=$cache_option
    [[ $use_cache ]] && break
done
NO_CACHE=$([ "$use_cache" == "without cache" ] && echo "true" || echo "")

sequential_options=(parallel sequential)
PS3="Do you want to build parallel (higher load) or sequential (slower)? (select with number): "
select sequential_option in "${sequential_options[@]}" ; do
    colcon_build_sequential=$sequential_option
    [[ $colcon_build_sequential ]] && break
done
COLCON_BUILD_SEQUENTIAL=$([ "$colcon_build_sequential" == "sequential" ] && echo "true" || echo "")

docker build \
    ${NO_CACHE:+--no-cache} \
    --build-arg COLCON_BUILD_SEQUENTIAL="$COLCON_BUILD_SEQUENTIAL" \
    -t "rcdt/$image:local" \
    -f "$SCRIPT_DIR_PATH/dockerfiles/$image.Dockerfile" \
    "$SCRIPT_DIR_PATH/dockerfiles"
