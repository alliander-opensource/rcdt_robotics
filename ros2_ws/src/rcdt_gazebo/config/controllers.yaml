# SPDX-FileCopyrightText: Alliander N. V.
#
# SPDX-License-Identifier: Apache-2.0

# Based on: https://github.com/husarion/panther_ros/blob/ros2/panther_controller/config/WH01_controller.yaml

franka:
  controller_manager:
    ros__parameters:
      update_rate: 1000

      joint_state_broadcaster:
        type: joint_state_broadcaster/JointStateBroadcaster

      fr3_arm_controller:
        type: joint_trajectory_controller/JointTrajectoryController

      gripper_action_controller:
        type: position_controllers/GripperActionController

  fr3_arm_controller:
    ros__parameters:
      allow_nonzero_velocity_at_trajectory_end: true
      command_interfaces:
        - position
      state_interfaces:
        - position
        - velocity
      joints:
        - fr3_joint1
        - fr3_joint2
        - fr3_joint3
        - fr3_joint4
        - fr3_joint5
        - fr3_joint6
        - fr3_joint7

  gripper_action_controller:
    ros__parameters:
      action_monitor_rate: 20.0
      allow_stalling: false
      goal_tolerance: 0.01
      joint: "fr3_finger_joint1"
      max_effort: 0.0
      stall_timeout: 1.0
      stall_velocity_threshold: 0.001

panther:
  controller_manager:
    ros__parameters:
      update_rate: 1000

      joint_state_broadcaster:
        type: joint_state_broadcaster/JointStateBroadcaster

      drive_controller:
        type: diff_drive_controller/DiffDriveController

  drive_controller:
    ros__parameters:
      left_wheel_names: [fl_wheel_joint, rl_wheel_joint]
      right_wheel_names: [fr_wheel_joint, rr_wheel_joint]

      wheel_separation: 0.697
      wheel_radius: 0.1825

      # For skid drive kinematics it will act as ICR coefficient, kinematic model with ICR
      # coefficient isn't totally accurate and this coefficient can differ for various ground types
      wheel_separation_multiplier: 1.5

      left_wheel_radius_multiplier: 1.0
      right_wheel_radius_multiplier: 1.0

      publish_rate: 1000.0
      odom_frame_id: odom
      base_frame_id: base_link
      twist_covariance_diagonal: [5.4e-5, 5.4e-5, 0.0, 0.0, 0.0, 1.9e-4] # Values measured experimentally

      # Whether to use feedback or commands for odometry calculations
      open_loop: false

      # Update odometry from velocity
      # in sensor fusion only velocity is used and with this setting it is more accurate
      position_feedback: false
      # velocity computation filtering
      velocity_rolling_window_size: 1

      enable_odom_tf: true

      cmd_vel_timeout: 0.5
      #publish_limited_velocity: true
      use_stamped_vel: false

      # Velocity and acceleration limits
      # Whenever a min_* is unspecified, default to -max_*
      linear:
        x:
          has_velocity_limits: true
          has_acceleration_limits: true
          has_jerk_limits: false
          max_velocity: 2.0 # m/s
          # min_velocity -  When unspecified `min_velocity=-max_velocity`
          max_acceleration: 2.7 # m/s^2
          # min_acceleration - When unspecified, `min_acceleration=-max_acceleration`
          max_jerk: 0.0 # m/s^3

      angular:
        z:
          has_velocity_limits: true
          has_acceleration_limits: true
          has_jerk_limits: false
          max_velocity: 4.0 # rad/s
          # min_velocity -  When unspecified `min_velocity=-max_velocity`
          max_acceleration: 5.74 # rad/s^2
          # min_acceleration - When unspecified, `min_acceleration=-max_acceleration`
          max_jerk: 0.0 # rad/s^3
